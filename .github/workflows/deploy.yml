name: Build and deploy Docker app  DOCKER HUB

on:
  push:
    branches: [main, staging]
    paths:
      - src/**
      - 'package.json'
      - .github/**
      - './*'

env:
  ME: ${{secrets.ME}}
  EXECPATH: ${{secrets.EXECPATH}}
  MARKETING_DB_STRING: ${{secrets.MARKETING_DB_STRING}}
  CLOUDINARY_NAME: ${{secrets.CLOUDINARY_NAME}}
  CLOUDINARY_KEY: ${{secrets.CLOUDINARY_KEY}}
  CLOUDINARY_SECRET: ${{secrets.CLOUDINARY_SECRET}}
  PORT: ${{secrets.PORT}}
  NODE_ENV: ${{secrets.NODE_ENV}}
  DOCKERHUB_USERNAME: ${{secrets.DOCKER_HUB_USERNAME}}
  DOCKERHUB_PASSWORD: ${{secrets.DOCKER_HUB_PASSWORD}}
  ORACLE_VM_PRIVATE_KEY: ${{secrets.ORACLE_PRIVATE_KEY}}
  ORACLE_VM_URL: ${{secrets.ORACLE_VM_URL}}
  ORACLE_USERNAME: ${{secrets.ORACLE_USERNAME}}
  AWS_EC2_PRIVATE_KEY: ${{secrets.AWS_EC2_PRIVATE_KEY}}
  EC2_URL: ${{secrets.EC2_URL}}
  EC2_USERNAME: ${{secrets.EC2_USERNAME}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_EC2_PRIVATE_KEY }}" > mackawaraaws.pem
          chmod 600 mackawaraaws.pem
      - name: SSH into EC2 VM and reset local repo to align to origin
        run: |
          ssh -o StrictHostKeyChecking=no -i  mackawaraaws.pem $EC2_USERNAME@$EC2_URL 'cd repos/marketing && git checkout main  && git fetch --all && git reset --hard origin/main'
      - name: Restart app using pm2 with new code
        run: |
          ssh -o StrictHostKeyChecking=no -i  mackawaraaws.pem $EC2_USERNAME@$EC2_URL ' cd repos/marketing && pm2 restart index.js  --name marketing'
