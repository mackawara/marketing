name: Build and deploy Docker app  DOCKER HUB

on:
  push:
    branches: [main, staging]
    paths:
      - src/**
      - 'package.json'
      - .github/**
      - './*'

env:
  ME: ${{secrets.ME}}
  EXECPATH: ${{secrets.EXECPATH}}
  MARKETING_DB_STRING: ${{secrets.MARKETING_DB_STRING}}
  CLOUDINARY_NAME: ${{secrets.CLOUDINARY_NAME}}
  CLOUDINARY_KEY: ${{secrets.CLOUDINARY_KEY}}
  CLOUDINARY_SECRET: ${{secrets.CLOUDINARY_SECRET}}
  PORT: ${{secrets.PORT}}
  NODE_ENV: ${{secrets.NODE_ENV}}
  DOCKERHUB_USERNAME: ${{secrets.DOCKER_HUB_USERNAME}}
  DOCKERHUB_PASSWORD: ${{secrets.DOCKER_HUB_PASSWORD}}
  ORACLE_VM_PRIVATE_KEY: ${{secrets.ORACLE_PRIVATE_KEY}}
  ORACLE_VM_URL: ${{secrets.ORACLE_VM_URL}}
  ORACLE_USERNAME: ${{secrets.ORACLE_USERNAME}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: mackawara/marketinweb:latest

      - name: Set permissions for private key
        run: |
          echo "${{ secrets.ORACLE_VM_PRIVATE_KEY }}" > nothandoracle.key
          chmod 600 nothandoracle.key
      - name: SSH into EC2 instance and navigate to repo and reset branch to main
        run: |
          ssh -o StrictHostKeyChecking=no -i  nothandoracle.key $ORACLE_USERNAME@$ORACLE_VM_URL 'cd repos/marketing  && git fetch --all && git reset --hard origin/main'
      - name: Restart app using pm2
        run: |
          ssh -o StrictHostKeyChecking=no -i  nothandoracle.key $ORACLE_USERNAME@$ORACLE_VM_URL 'pm2 restart marketing'

#setup-ssh:
#runs-on: ubuntu-latest
#env:
#AWS_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
#EC2_URL: ${{ secrets.EC2_URL }}
#EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
#steps:
#- name: Setup SSH for EC2
#uses: omarhosny206/setup-ssh-for-ec2@v1.0.0
#with:
#EC2_SSH_PRIVATE_KEY: $EC2_SSH_PRIVATE_KEY
#EC2_URL: $EC2_URL
#- name: Get into repos
#run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "cd repos/askme"
#- name: Pull latest changes
#run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "git pull origin main"
#- name: Restart using pm2
#run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "pm2 restart marketing
